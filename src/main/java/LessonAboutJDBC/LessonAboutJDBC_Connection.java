package LessonAboutJDBC;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/* 
 * Для того что бы управлять БД в java есть специальный API JDBC.
 * Его функционал позволяет работать с любой СУБД, но только с теми которые поддерживают SQL, то есть реляционные.
 * 
 * Для того что бы можно было бы взаимодейтствовать с какой либо СУБД, в JDBC есть драйвера.
 * Каждый драйвер отвечает за подключение к конкретной СУБД, ну то есть у MySQL он свой, у Postgres свой и так далее...
 * Драйвер из себя представляет некие JAR-файлы, которые мы должны были бы скачать из официального сайта нашей СУБД, а после закинуть в проект.
 * После этого нам бы пришлось бы еще что то прописывать в коносле и/или в в переменной PATH в системе.
 * НО мы делать этого НЕ будем потому как у нас есть MAVEN и можно подтянуть зависимость в файлик pom.xml
 * 
 * Еще может быть такое что мы подтянули зависимость, но в нашем проекте всеравно нечего не рабоатет.
 * Библиотеки не импортируються и т.д.
 * В таком случае можно просто удалить файлик module-info.java и все. 
 * Но если все же этот файл вам нужен, тогда в него можно прописать:
 * requires java.sql;
 * И все будет работать.
 * 
 * С помощью драйвера мы как бы определяем с какой СУБД мы будем работать, к какой СУБД мы подклюаемся, с каким функицоналом мы будем работать.
 * Но что бы подсоедениться уже к самой БД, нам нужен обьект класса Connection.
 * Connection - класс отвечает за соединение с БД, именно его обьект нам нужно создать.
 * Что бы создать обьект соединения нужно, написать:
 * Connection c = DriverManager.getConnection("jdbc:mysql://localhost/test1","root","root");
 * То есть сам обьект создаеться в методе getConnection() класса DriverManager который, как понятно из названия, занимаеться управлением драйвера подключения.
 * То есть другими словами, мы запрашиваем соединение к БД у драйвера.
 * В атрибут метода getConnection() кладеться три параметра:
 * 1) URL - адрес БД к которой мы подключаемся
 * Он записываеться так: 
 * jdbc:имя драйвера://хост[:порт/]имя БД
 * Если мы соединяемся с БД на нашем локальном компьютере, тогда мы пишем вот так:
 * jdbc:имя драйвера://localhost/имя БД
 * 2) login - логин от нашего сервера 
 * 3) password - пароль от нашего сервера
 * 
 * После завершения работы с БД, требуеться прервать соединения с БД методом close() или с помощью try-with-resources
 * 
 * По хорошему значения хоста, пороля, логина нужно помещять в final переменные, а еще лучше и ПАРВИЛЬНО помещять их в файл properties
 * 
 */
public class LessonAboutJDBC_Connection {
	public static void main(String[] args) {		
		/*
		 * Соединяемся с существующей БД test1 через обьект Connection который получаем в методе getConnection() класса DriverManager
		 * В самом методе getConnection() мы прописали url нашей локальной БД, а так же login и password от существующего сервера
		 * Так же мы поместили созданный обьект сразу в try-with-resources что бы автоматически его закрыть
		 * 
		 */	
		try(Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/test1","root","root")) {
			System.out.println("Подключились");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
